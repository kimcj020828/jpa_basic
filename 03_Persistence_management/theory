영속성 컨텍스트


JPA에서 가장 중요한 2가지
* 객체와 관계형 데이터 베이스 매핑하기(설계영역)
(Object Relational Mapping)
*영속성 컨텍스트


EntityManagerFactory & EntityManager


영속성 컨텍스트
*JPA를 이해하는데 가장 중요한 용어
*"엔티티를 영구 저장하는 환경"이라는 뜻
* EntityManager.persist(entity);이 코드의 뜻은 '영속성 컨텍스트를 통해 인자로 받은 entity를 영속화 한다는 뜻(DB에 저장한다는 뜻은 아님,실제로 DB에 저장이되지 않음),즉 Entity를 영속성 컨텍스트라는 곳에 저장한다는 뜻'



영속성 매니저? 영속성 컨텍스트?
* 영속성 컨텍스트는 논리적인 개념
* 눈에 보이지 않는다.
* 엔티티 매니저를 통해서 영속성 컨텍스트에 접근


(J2SE환경)
엔티티메니저를 생성하면 이에 따른 영속성컨텍스트(PersistenceContext)가 생성되고 맵핑됨(엔티티매니져1:영속성컨텍스트1)

(J2EE환경, 스프링 프레임워크 같은 컨테이너 환경)
엔티티메니저를 생성하면 이에 따른 영속성컨텍스트(PersistenceContext)가 생성되고 맵핑됨(엔티티매니져N:영속성컨텍스트1)


엔티티의 생명주기
* 비영속(new/transient)
=> 영속성 컨텍스트와 전혀 관계가 없는 새로운 상태(new Member())
* 영속(managed)
=> 영속성 컨텍스트에 관리되는 상태(ex.   em.persist(member);// persist를 하는 시점에 영속성 컨텍스트에 관리되는 상태)
* 준영속(detached)
=> 영속성 컨텍스트에 저장되었다가 분리된 상태
*삭제(removed)
=>삭제된 상태